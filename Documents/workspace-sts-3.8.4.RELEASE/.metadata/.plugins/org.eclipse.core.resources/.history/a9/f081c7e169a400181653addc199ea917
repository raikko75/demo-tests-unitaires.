package fr.pizzeria.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;


import fr.pizzeria.model.Pizza;

public class PizzaMemDao implements IPizzaDao {

	private List<Pizza> pizzas = new ArrayList();
	private PreparedStatement pst;
	private ResultSet rs;
	public PizzaMemDao(){
		try {
			Class.forName("com.mysql.jdbc.Driver");
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		pizzas.add(new Pizza("PEP", "Pépéroni", 12.50));
		pizzas.add(new Pizza("MAR", "Margherita", 14.00));
		pizzas.add(new Pizza("REIN", "La Reine", 11.50));
		pizzas.add(new Pizza("FRO", "La 4 fromages", 12.00));
		pizzas.add(new Pizza("CAN", "La cannibale", 12.50));
		pizzas.add(new Pizza("SAV", "La savoyarde", 13.00));
		pizzas.add(new Pizza("ORI", "L’orientale", 13.50));
		pizzas.add(new Pizza("IND", "L’indienne", 14.00));
		pizzaToBdd();
	}

	public Connection getConnection(){
		Connection connection;
		try {
			connection = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/pizzas","root","");
			System.out.println("crée");
			return connection;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace(); 
		}
		return null;
	}

	@Override
	public List<Pizza> findAllPizzas() {
		String sql ="SELECT * FROM pizza";
		try{
			pst = (PreparedStatement) getConnection().prepareStatement(sql);
			rs = pst.executeQuery();
			while(rs.next()){
				pizzas.add(new Pizza(rs.getString("code"),rs.getString("libelle"),rs.getDouble("prix")));
			}
			rs.close();
			pst.close();
			return pizzas;
		}catch (Exception e) {
			// TODO: handle exception
		}
		return pizzas;


	}

	@Override
	public void saveNewPizza(Pizza pizza) {

		String sql ="INSERT INTO PIZZA(code,libelle,prix) "
				+ "VALUES(?,?,?)";
		try{
			pst = (PreparedStatement) getConnection().prepareStatement(sql);
			pst.setString(1, pizza.getCode());
			pst.setString(2, pizza.getLibelle());
			pst.setDouble(3, pizza.getPrix());
			int value = pst.executeUpdate();
			pst.close();
		}catch (Exception e) {
			System.out.println(e.getMessage()+ e.getClass());
		}


	}

	@Override
	public void updatePizza(String codePizza, Pizza pizza) {
		String sql ="UPDATE PIZZA SET  libelle =? , prix = ? WHERE code = ? ";
		try{
			PreparedStatement pst = (PreparedStatement) getConnection().prepareStatement(sql);
			pst.setString(1,pizza.getLibelle());
			pst.setDouble(2,pizza.getPrix());	
			pst.setString(3, codePizza);
			pst.executeUpdate();
			pst.close();
		}catch (Exception e) {
			// TODO: handle exception
		}

	}

	@Override
	public void deletePizza(String codePizza) {
		String sql ="delete FROM pizza WHERE code = ? ";
		try{
			PreparedStatement pst = (PreparedStatement) getConnection().prepareStatement(sql);
			pst.setString(1,codePizza);
			pst.executeUpdate();
			pst.close();
		}catch (Exception e) {
			// TODO: handle exception
		}
	}

	@Override
	public Pizza findPizzaByCode(String codePizza) {
		String sql ="SELECT * FROM pizza WHERE code = ? ";
		try{
			PreparedStatement pst = (PreparedStatement) getConnection().prepareStatement(sql);
			pst.setString(1,codePizza);
			pst.executeUpdate();
			ResultSet rs =  pst.executeQuery();
			rs.next();
			pizzas.add(new Pizza(rs.getString("code"), rs.getString("libelle"), rs.getDouble("prix")));
			pst.close();
			rs.close();
		}catch (Exception e) {
			// TODO: handle exception
		}
		return null;
	}

	@Override
	public boolean pizzaExists(String codePizza) {
		String sql ="SELECT * FROM pizza WHERE code = ? ";
		Boolean result = false;
		
		try{
			pst = (PreparedStatement) getConnection().prepareStatement(sql);
			pst.setString(1,codePizza);
			pst.executeUpdate();
			  rs =  pst.executeQuery();
			result = rs.next();
			rs.close();
			pst.close();
			if(result){
				return true;
			}else
				return false;
		}catch (Exception e) {
			// TODO: handle exception
		}
		return false;
	}

	@Override
	public void pizzaToBdd() {
		try {
			String sql ="INSERT INTO PIZZA(code,libelle,prix) "
					+ "VALUES(?,?,?)";

			for (Pizza temp : pizzas) {
				pst = (PreparedStatement) getConnection().prepareStatement(sql);
				pst.setString(1, temp.getCode());
				pst.setString(2, temp.getLibelle());
				pst.setDouble(3, temp.getPrix());
				pst.executeUpdate();
			}
			pst.close();
		} catch (Exception e) {
			// TODO: handle exception
		}
		
	}

}
